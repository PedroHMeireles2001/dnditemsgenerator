import './App.css';
import Form from './Components/Forms';
import InputText from './Components/Forms/InputText';
import Buttom from './Components/Forms/Button';
import SectionContainer from './Components/SectionContainer';
import { useState } from 'react';
import MainTitle from './Components/MainTitle';
import TextArea from './Components/TextArea';
import ImageDisplay from './Components/ImageDisplay';
import { generateItem, generateItemSurprise } from './Service/axiosService';
import Header from './Header';
import Switch from './Components/Forms/Switch';
import Dropdown from './Components/Forms/DropDown';
import Slider from './Components/Forms/Slider';


const imageGenInitial = true

function App() {
  const [item, setitem] = useState(null)
  const [loading, setloading] = useState(false)
  const [imageGen, setimageGen] = useState(imageGenInitial)
  const [settings, setSettings] = useState({image:imageGenInitial,temperature:1.0,imageRes:"1024x1024",quality:"standard",model:"gpt-3.5-turbo"})
  const [showSettings, setshowSettings] = useState(false)

  function submit(e){
    e.preventDefault()
    setloading(true)
    setitem(null)
    generateItem(settings).then((data)=>{
      setloading(false)
      setitem(data)
      console.log(data)
    })
  }

  function submitSurprise(e){
    e.preventDefault()
    setloading(true)
    setitem(null)
    generateItemSurprise(settings).then((data)=>{
      setloading(false)
      setitem(data)
      console.log(data)
    })
  }
  return (
    <main>
      <Header/>
      <SectionContainer>
        <MainTitle>Magic Items Generator</MainTitle>
        <Form>
          <InputText placeholder={"Insert a magic item"} onChange={(e)=>{
            const imgs = settings
            imgs.item = e
            setSettings(imgs)
            console.log(settings)
          }}/>
          <Buttom text={"Submit"} onClick={submit} />
          <Buttom text={"Surprise me"} onClick={submitSurprise} />
        </Form>
        <Switch onToggle={setshowSettings} initialState={false} label={["Hide Settings","Show Settings"]} />
        {showSettings && 
        <Form>
          <h3>Settings:</h3>
          <Slider label={"Creativity: "} initial={settings.temperature} min={0} max={2} onChange={(e)=>{
            const imgs = settings
            imgs.temperature = e
            setSettings(imgs)
            console.log(settings)
          }} />
          <div style={{display:"flex", justifyContent:"center"}}>
            <Switch onToggle={(e)=>{
              const imgs = settings
              imgs.image = e
              setSettings(imgs)
              setimageGen(e)
              console.log(settings)
            }} initialState={imageGen} label={["Gerar imagem","Gerar imagem"]}/>
            <Switch onToggle={(e)=>{
              const imgs = settings
              imgs.model = e ? "gpt-4-1106-preview" : "gpt-3.5-turbo"
              setSettings(imgs)
              console.log(settings)
            }} initialState={settings.model == "gpt-4-1106-preview"} label={["GPT-4","GPT-3"]}/>
          </div>
        </Form>
        }
        { showSettings && imageGen && 
        <Form>
          <p>Image Settings:</p>
          <Switch onToggle={(e)=>{
            const imgs = settings
            imgs.quality = e ? "hd" : "standard"
            setSettings(imgs)
            console.log(settings)
          }} initialState={settings.quality == "hd"} label={["HD","Standard"]}/>
          <Dropdown label={"Image resolution: "} options={["1024x1024","1792x1024","1024x1792"]} onSelect={(e)=>{
            const imgs = settings
            imgs.imageRes = e
            setSettings(imgs)
            console.log(settings)
          }} />
        </Form>}
        {loading && <h2>Loading...</h2>}
      </SectionContainer>

      {item && <SectionContainer>
        <MainTitle>Item: </MainTitle>
        {item.itemUrl && <ImageDisplay alt={"Image generated by dall-e 3"} src={item.itemUrl} />} 
        <TextArea title={"Visual Description"} text={item.visual} />
        <TextArea title={"Sheet (adapted for D&D 5e)"} text={item.sheet} />
      </SectionContainer>}
    </main>
  );
}

export default App;
